# Definitions
ROOT_DIR := $(shell dirname $(dir $(realpath $(lastword $(MAKEFILE_LIST)))))
UNITY_DIR = $(ROOT_DIR)/tests/
BUILD_DIR = build

# Allow for all parent instructions to be used in the child directories
include $(ROOT_DIR)/Makefile.lab

# Check if the first word is a target matching *.run
# We handle this case differently as we wish to be able to pass arguments down to binaries on the run target ONLY.
ifneq (,$(findstring .run,$(firstword $(MAKECMDGOALS))))
  # Extract the program name (without .run)
  prog_name := $(basename $(firstword $(MAKECMDGOALS)))
  # Get the arguments for the run
  runargs := $(wordlist 2, $(words $(MAKECMDGOALS)), $(MAKECMDGOALS))
  # Make the arguments "do nothing"
  $(eval $(runargs):;@true)
endif

# Ensure the build directory exists
$(BUILD_DIR):
	mkdir -p $@

# Rule for building a program and placing binary in build directory
%.build: $(BUILD_DIR)
	gcc -o $(BUILD_DIR)/$* $*.c

# Rule for testing a program using Unity
%.test: %.build
	gcc -DTESTING -o $(BUILD_DIR)/test_$* tests/test_$*.c $(UNITY_DIR)/unity/unity.c -I$(UNITY_DIR)
	./$(BUILD_DIR)/test_$*

# Rule to run the compiled program with given arguments
%.run: %.build
	@./$(BUILD_DIR)/$(prog_name) $(runargs)

# Rule for cleaning up compiled executables
%.clean:
	rm -f $(BUILD_DIR)/$* $(BUILD_DIR)/test_$*

# Custom pattern rule for .makerdiary targets
# Builds a UF2 file compatible with makerdiary boards
%.makerdiary:
	@echo Building $* for Makerdiary...
	make build/nrf52840/dongle/$*.hex
	mkdir -p build/nrf52840/makerdiary
	python3 $(ROOT_DIR)/tools/uf2conv/uf2conv.py -f 0xADA52840 -c -o build/nrf52840/makerdiary/$*.uf2 build/nrf52840/dongle/$*.hex
	@echo Build complete. You can find the file at:
	@echo $(CURDIR)/build/nrf52840/makerdiary/$*.uf2

# Custom pattern rule for .makerdiary-upload targets
# First, build the UF2 file, then search for the Makerdiary device and upload the file if found
%.makerdiary-upload: %.makerdiary
	@echo Searching for Makerdiary device...
	@# Search for the mount point containing INFO_UF2.TXT
	$(eval MOUNT_POINT=$(shell find /media/$$USER -name INFO_UF2.TXT -exec dirname {} \;))
	@# Check if MOUNT_POINT has been set
	@if [ -z "$(MOUNT_POINT)" ]; then \
		echo "ERROR: No Makerdiary device found. Please make sure it is connected and in bootloader mode."; \
	else \
		echo "Makerdiary device found at $(MOUNT_POINT). Uploading UF2 file..."; \
		cp $(CURDIR)/build/nrf52840/makerdiary/$*.uf2 $(MOUNT_POINT)/ && \
		echo "Waiting for the device to disconnect..."; \
		while [ -d "$(MOUNT_POINT)" ]; do sleep 0.1; done; \
		echo "SUCCESS: Upload complete. You must unplug the device to reboot it and 'make login'."; \
	fi
